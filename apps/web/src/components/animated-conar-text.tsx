'use client'

import { animate, motion, useMotionValue, useSpring } from 'motion/react'
import React, { useEffect, useRef, useState } from 'react'

const LIGHT_CIRCLE_RADIUS = 70

function AnimatedConarText() {
  const containerRef = useRef<HTMLDivElement>(null)
  const [isHovered, setIsHovered] = useState(false)

  const svgViewBox = { width: 637, height: 213 }

  const x = useMotionValue(svgViewBox.width / 2)
  const y = useMotionValue(svgViewBox.height / 2)

  const springConfig = { damping: 100, stiffness: 120 }
  const smoothX = useSpring(x, springConfig)
  const smoothY = useSpring(y, springConfig)

  const loopingAnimX = useRef<ReturnType<typeof animate> | null>(null)
  const loopingAnimY = useRef<ReturnType<typeof animate> | null>(null)

  useEffect(() => {
    let initialAnimX: ReturnType<typeof animate> | undefined
    let initialAnimY: ReturnType<typeof animate> | undefined

    if (!isHovered) {
      const fromX = x.get()
      const toX = svgViewBox.width
      const fullDurationX = 10
      const durationX = fullDurationX * (Math.abs(toX - fromX) / svgViewBox.width)

      initialAnimX = animate(x, toX, {
        duration: durationX,
        ease: 'linear',
        onComplete: () => {
          loopingAnimX.current = animate(x, [toX, 0], {
            duration: fullDurationX,
            repeat: Infinity,
            repeatType: 'reverse',
            ease: 'linear',
          })
        },
      })

      const fromY = y.get()
      const toY = svgViewBox.height * 0.8
      const waypointA = svgViewBox.height * 0.8
      const waypointB = svgViewBox.height * 0.2
      const fullDurationY = 8
      const durationY = fullDurationY * (Math.abs(toY - fromY) / Math.abs(waypointA - waypointB))

      initialAnimY = animate(y, toY, {
        duration: durationY,
        ease: 'linear',
        onComplete: () => {
          loopingAnimY.current = animate(y, [toY, waypointB], {
            duration: fullDurationY,
            repeat: Infinity,
            repeatType: 'reverse',
            ease: 'linear',
          })
        },
      })
    }

    return () => {
      initialAnimX?.stop()
      initialAnimY?.stop()
      loopingAnimX.current?.stop()
      loopingAnimX.current = null
      loopingAnimY.current?.stop()
      loopingAnimY.current = null
    }
  }, [isHovered, x, y, svgViewBox.width, svgViewBox.height])

  const handleMouseMove = (e: React.MouseEvent<HTMLDivElement>) => {
    if (containerRef.current) {
      const rect = containerRef.current.getBoundingClientRect()
      const mouseX = e.clientX - rect.left
      const mouseY = e.clientY - rect.top

      const svgX = (mouseX / rect.width) * svgViewBox.width
      const svgY = (mouseY / rect.height) * svgViewBox.height

      x.set(svgX)
      y.set(svgY)
    }
  }

  const handleMouseOver = () => {
    setIsHovered(true)
  }

  const handleMouseOut = () => {
    setIsHovered(false)
  }

  return (

    <div
      ref={containerRef}
      onMouseMove={handleMouseMove}
      onMouseOver={handleMouseOver}
      onMouseOut={handleMouseOut}
      className="w-fit px-4 mx-auto"
    >
      <svg className="w-full sm:h-[300px] h-[200px]" viewBox="0 0 637 213" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g stroke="#26262650" strokeLinejoin="round">
          <path d="M304 35H285L278 42.5H296.5L304 35ZM304 35L362.5 121" />
          <path d="M298.5 171.5L306 165V88" />
          <path d="M362 42.5L368 35H389M389 35L382.5 42.5M389 35V166L382.5 171.5" />
          <path d="M158 55.5C164.833 46.5 187.4 30.3801 219 37.9801C258.5 47.4801 262.449 98.2289 259 114.98C255.5 131.98 251 140.98 240.5 153.48M170.5 71C163 87.8333 155.2 126.58 184 144.98C190 148.48 212.5 153.48 225 141.48" />
          <path d="M27 57.2279C35.8333 44.5613 63 23.4279 101 40.2279C112.5 45.7279 123.5 57.2279 127.5 78.2279L121 85M127.5 122.728H107L100.5 129L121 129.5L127.5 122.728ZM127.5 122.728C125.5 139.128 114.833 151.167 109.5 155M46 66.2279C37.1667 84.5612 27.9 126.228 61.5 146.228C74 152.228 94 146.5 98.5 136" />
          <path d="M421.5 171.5L429.5 165.5L439 138M461 75L447.5 113.5H474M446 42.5L453 35.5H476.186M476.186 35.5L469 42.5M476.186 35.5L522.5 164.5L515.5 171.5" />
          <path d="M553.5 171.5L561 164.5V123M561 60V98.5H587C589.667 98.5 596.3 97.6 601.5 94M533 42.5L540 35.5H588.5C596.667 35.1667 615.4 38.2 625 53C637 71.5 626.731 95.3069 625 98C620.5 105 618 107.5 615 109.5M609 115L636 164.5L629 171.5" />
          <path
            className="dark:fill-[url(#conar-gradient)]"
            d="M 120.375 84.625 H 100.875 C 100.125 80.4583 98.7292 76.7917 96.6875 73.625 C 94.6458 70.4583 92.1458 67.7708 89.1875 65.5625 C 86.2292 63.3542 82.9167 61.6875 79.25 60.5625 C 75.625 59.4375 71.7708 58.875 67.6875 58.875 C 60.3125 58.875 53.7083 60.7292 47.875 64.4375 C 42.0833 68.1458 37.5 73.5833 34.125 80.75 C 30.7917 87.9167 29.125 96.6667 29.125 107 C 29.125 117.417 30.7917 126.208 34.125 133.375 C 37.5 140.542 42.1042 145.958 47.9375 149.625 C 53.7708 153.292 60.3333 155.125 67.625 155.125 C 71.6667 155.125 75.5 154.583 79.125 153.5 C 82.7917 152.375 86.1042 150.729 89.0625 148.562 C 92.0208 146.396 94.5208 143.75 96.5625 140.625 C 98.6458 137.458 100.083 133.833 100.875 129.75 L 120.375 129.812 C 119.333 136.104 117.313 141.896 114.313 147.187 C 111.354 152.438 107.542 156.979 102.875 160.812 C 98.25 164.604 92.9583 167.542 87 169.625 C 81.0417 171.708 74.5417 172.75 67.5 172.75 C 56.4167 172.75 46.5417 170.125 37.875 164.875 C 29.2083 159.583 22.375 152.021 17.375 142.187 C 12.4167 132.354 9.9375 120.625 9.9375 107 C 9.9375 93.3333 12.4375 81.6042 17.4375 71.8125 C 22.4375 61.9792 29.2708 54.4375 37.9375 49.1875 C 46.6042 43.8958 56.4583 41.25 67.5 41.25 C 74.2917 41.25 80.625 42.2292 86.5 44.1875 C 92.4167 46.1042 97.7292 48.9375 102.438 52.6875 C 107.146 56.3958 111.042 60.9375 114.125 66.3125 C 117.208 71.6458 119.292 77.75 120.375 84.625 Z M 254.672 107 C 254.672 120.667 252.172 132.417 247.172 142.25 C 242.172 152.042 235.318 159.583 226.609 164.875 C 217.943 170.125 208.089 172.75 197.047 172.75 C 185.964 172.75 176.068 170.125 167.359 164.875 C 158.693 159.583 151.859 152.021 146.859 142.187 C 141.859 132.354 139.359 120.625 139.359 107 C 139.359 93.3333 141.859 81.6042 146.859 71.8125 C 151.859 61.9792 158.693 54.4375 167.359 49.1875 C 176.068 43.8958 185.964 41.25 197.047 41.25 C 208.089 41.25 217.943 43.8958 226.609 49.1875 C 235.318 54.4375 242.172 61.9792 247.172 71.8125 C 252.172 81.6042 254.672 93.3333 254.672 107 Z M 235.547 107 C 235.547 96.5833 233.859 87.8125 230.484 80.6875 C 227.151 73.5208 222.568 68.1042 216.734 64.4375 C 210.943 60.7292 204.38 58.875 197.047 58.875 C 189.672 58.875 183.089 60.7292 177.297 64.4375 C 171.505 68.1042 166.922 73.5208 163.547 80.6875 C 160.214 87.8125 158.547 96.5833 158.547 107 C 158.547 117.417 160.214 126.208 163.547 133.375 C 166.922 140.5 171.505 145.917 177.297 149.625 C 183.089 153.292 189.672 155.125 197.047 155.125 C 204.38 155.125 210.943 153.292 216.734 149.625 C 222.568 145.917 227.151 140.5 230.484 133.375 C 233.859 126.208 235.547 117.417 235.547 107 Z M 382.063 43 V 171 H 364.312 L 299.25 77.125 H 298.063 V 171 H 278.75 V 43 H 296.625 L 361.75 137 H 362.937 V 43 H 382.063 Z M 421.047 171 H 400.547 L 446.609 43 H 468.922 L 514.984 171 H 494.484 L 458.297 66.25 H 457.297 L 421.047 171 Z M 439.05 119 H 476.5 V 119 L 482.4 136 L 433.15 136 V 136 Z M 533.469 171 V 43 H 579.094 C 589.01 43 597.24 44.7083 603.781 48.125 C 610.365 51.5417 615.281 56.2708 618.531 62.3125 C 621.781 68.3125 623.406 75.25 623.406 83.125 C 623.406 90.9583 621.76 97.8542 618.469 103.813 C 615.219 109.729 610.302 114.333 603.719 117.625 C 597.177 120.917 588.948 122.563 579.031 122.563 H 552.8 V 105.937 H 577.281 C 583.531 105.937 588.615 105.042 592.531 103.25 C 596.49 101.458 599.385 98.8542 601.219 95.4375 C 603.052 92.0208 603.969 87.9167 603.969 83.125 C 603.969 78.2917 603.031 74.1042 601.156 70.5625 C 599.323 67.0208 596.427 64.3125 592.469 62.4375 C 588.552 60.5208 583.406 59.5625 577.031 59.5625 H 552.781 V 171 H 533.469 Z M 601 118.85 L 628.281 171 H 606.281 L 579 122.56 H 579 C 588.9 122.55 597.18 120.7 601 118.85 Z"

          />
          <path className="hidden dark:block" d="M 120.375 84.625 H 100.875 C 100.125 80.4583 98.7292 76.7917 96.6875 73.625 C 94.6458 70.4583 92.1458 67.7708 89.1875 65.5625 C 86.2292 63.3542 82.9167 61.6875 79.25 60.5625 C 75.625 59.4375 71.7708 58.875 67.6875 58.875 C 60.3125 58.875 53.7083 60.7292 47.875 64.4375 C 42.0833 68.1458 37.5 73.5833 34.125 80.75 C 30.7917 87.9167 29.125 96.6667 29.125 107 C 29.125 117.417 30.7917 126.208 34.125 133.375 C 37.5 140.542 42.1042 145.958 47.9375 149.625 C 53.7708 153.292 60.3333 155.125 67.625 155.125 C 71.6667 155.125 75.5 154.583 79.125 153.5 C 82.7917 152.375 86.1042 150.729 89.0625 148.562 C 92.0208 146.396 94.5208 143.75 96.5625 140.625 C 98.6458 137.458 100.083 133.833 100.875 129.75 L 120.375 129.812 C 119.333 136.104 117.313 141.896 114.313 147.187 C 111.354 152.438 107.542 156.979 102.875 160.812 C 98.25 164.604 92.9583 167.542 87 169.625 C 81.0417 171.708 74.5417 172.75 67.5 172.75 C 56.4167 172.75 46.5417 170.125 37.875 164.875 C 29.2083 159.583 22.375 152.021 17.375 142.187 C 12.4167 132.354 9.9375 120.625 9.9375 107 C 9.9375 93.3333 12.4375 81.6042 17.4375 71.8125 C 22.4375 61.9792 29.2708 54.4375 37.9375 49.1875 C 46.6042 43.8958 56.4583 41.25 67.5 41.25 C 74.2917 41.25 80.625 42.2292 86.5 44.1875 C 92.4167 46.1042 97.7292 48.9375 102.438 52.6875 C 107.146 56.3958 111.042 60.9375 114.125 66.3125 C 117.208 71.6458 119.292 77.75 120.375 84.625 Z M 254.672 107 C 254.672 120.667 252.172 132.417 247.172 142.25 C 242.172 152.042 235.318 159.583 226.609 164.875 C 217.943 170.125 208.089 172.75 197.047 172.75 C 185.964 172.75 176.068 170.125 167.359 164.875 C 158.693 159.583 151.859 152.021 146.859 142.187 C 141.859 132.354 139.359 120.625 139.359 107 C 139.359 93.3333 141.859 81.6042 146.859 71.8125 C 151.859 61.9792 158.693 54.4375 167.359 49.1875 C 176.068 43.8958 185.964 41.25 197.047 41.25 C 208.089 41.25 217.943 43.8958 226.609 49.1875 C 235.318 54.4375 242.172 61.9792 247.172 71.8125 C 252.172 81.6042 254.672 93.3333 254.672 107 Z M 235.547 107 C 235.547 96.5833 233.859 87.8125 230.484 80.6875 C 227.151 73.5208 222.568 68.1042 216.734 64.4375 C 210.943 60.7292 204.38 58.875 197.047 58.875 C 189.672 58.875 183.089 60.7292 177.297 64.4375 C 171.505 68.1042 166.922 73.5208 163.547 80.6875 C 160.214 87.8125 158.547 96.5833 158.547 107 C 158.547 117.417 160.214 126.208 163.547 133.375 C 166.922 140.5 171.505 145.917 177.297 149.625 C 183.089 153.292 189.672 155.125 197.047 155.125 C 204.38 155.125 210.943 153.292 216.734 149.625 C 222.568 145.917 227.151 140.5 230.484 133.375 C 233.859 126.208 235.547 117.417 235.547 107 Z M 382.063 43 V 171 H 364.312 L 299.25 77.125 H 298.063 V 171 H 278.75 V 43 H 296.625 L 361.75 137 H 362.937 V 43 H 382.063 Z M 421.047 171 H 400.547 L 446.609 43 H 468.922 L 514.984 171 H 494.484 L 458.297 66.25 H 457.297 L 421.047 171 Z M 439.05 119 H 476.5 V 119 L 482.4 136 L 433.15 136 V 136 Z M 533.469 171 V 43 H 579.094 C 589.01 43 597.24 44.7083 603.781 48.125 C 610.365 51.5417 615.281 56.2708 618.531 62.3125 C 621.781 68.3125 623.406 75.25 623.406 83.125 C 623.406 90.9583 621.76 97.8542 618.469 103.813 C 615.219 109.729 610.302 114.333 603.719 117.625 C 597.177 120.917 588.948 122.563 579.031 122.563 H 552.8 V 105.937 H 577.281 C 583.531 105.937 588.615 105.042 592.531 103.25 C 596.49 101.458 599.385 98.8542 601.219 95.4375 C 603.052 92.0208 603.969 87.9167 603.969 83.125 C 603.969 78.2917 603.031 74.1042 601.156 70.5625 C 599.323 67.0208 596.427 64.3125 592.469 62.4375 C 588.552 60.5208 583.406 59.5625 577.031 59.5625 H 552.781 V 171 H 533.469 Z M 601 118.85 L 628.281 171 H 606.281 L 579 122.56 H 579 C 588.9 122.55 597.18 120.7 601 118.85 Z" />
        </g>
        <g mask="url(#stroke-mask)">
          <motion.circle
            className="dark:opacity-50 opacity-100"
            id="animation-circle"
            animate={{
              rotate: 360,
            }}
            transition={{
              rotate: {
                duration: 8,
                repeat: Infinity,
                ease: 'linear',
              },
            }}
            cx={smoothX}
            cy={smoothY}
            r={LIGHT_CIRCLE_RADIUS}
            fill="url(#circle-rgb-gradient)"
            filter="url(#blur-filter)"
            overflow="visible"
          />
        </g>
        <defs>
          <filter id="blur-filter" x="-50%" y="-50%" width="200%" height="200%">
            <feGaussianBlur in="SourceGraphic" stdDeviation="25" />
          </filter>
          <mask id="stroke-mask">
            <g stroke="white" strokeLinejoin="round" fill="none">
              <path d="M304 35H285L278 42.5H296.5L304 35ZM304 35L362.5 121" />
              <path d="M298.5 171.5L306 165V88" />
              <path d="M362 42.5L368 35H389M389 35L382.5 42.5M389 35V166L382.5 171.5" />
              <path d="M158 55.5C164.833 46.5 187.4 30.3801 219 37.9801C258.5 47.4801 262.449 98.2289 259 114.98C255.5 131.98 251 140.98 240.5 153.48M170.5 71C163 87.8333 155.2 126.58 184 144.98C190 148.48 212.5 153.48 225 141.48" />
              <path d="M27 57.2279C35.8333 44.5613 63 23.4279 101 40.2279C112.5 45.7279 123.5 57.2279 127.5 78.2279L121 85M127.5 122.728H107L100.5 129L121 129.5L127.5 122.728ZM127.5 122.728C125.5 139.128 114.833 151.167 109.5 155M46 66.2279C37.1667 84.5612 27.9 126.228 61.5 146.228C74 152.228 94 146.5 98.5 136" />
              <path d="M421.5 171.5L429.5 165.5L439 138M461 75L447.5 113.5H474M446 42.5L453 35.5H476.186M476.186 35.5L469 42.5M476.186 35.5L522.5 164.5L515.5 171.5" />
              <path d="M553.5 171.5L561 164.5V123M561 60V98.5H587C589.667 98.5 596.3 97.6 601.5 94M533 42.5L540 35.5H588.5C596.667 35.1667 615.4 38.2 625 53C637 71.5 626.731 95.3069 625 98C620.5 105 618 107.5 615 109.5M609 115L636 164.5L629 171.5" />
              <path d="M 120.375 84.625 H 100.875 C 100.125 80.4583 98.7292 76.7917 96.6875 73.625 C 94.6458 70.4583 92.1458 67.7708 89.1875 65.5625 C 86.2292 63.3542 82.9167 61.6875 79.25 60.5625 C 75.625 59.4375 71.7708 58.875 67.6875 58.875 C 60.3125 58.875 53.7083 60.7292 47.875 64.4375 C 42.0833 68.1458 37.5 73.5833 34.125 80.75 C 30.7917 87.9167 29.125 96.6667 29.125 107 C 29.125 117.417 30.7917 126.208 34.125 133.375 C 37.5 140.542 42.1042 145.958 47.9375 149.625 C 53.7708 153.292 60.3333 155.125 67.625 155.125 C 71.6667 155.125 75.5 154.583 79.125 153.5 C 82.7917 152.375 86.1042 150.729 89.0625 148.562 C 92.0208 146.396 94.5208 143.75 96.5625 140.625 C 98.6458 137.458 100.083 133.833 100.875 129.75 L 120.375 129.812 C 119.333 136.104 117.313 141.896 114.313 147.187 C 111.354 152.438 107.542 156.979 102.875 160.812 C 98.25 164.604 92.9583 167.542 87 169.625 C 81.0417 171.708 74.5417 172.75 67.5 172.75 C 56.4167 172.75 46.5417 170.125 37.875 164.875 C 29.2083 159.583 22.375 152.021 17.375 142.187 C 12.4167 132.354 9.9375 120.625 9.9375 107 C 9.9375 93.3333 12.4375 81.6042 17.4375 71.8125 C 22.4375 61.9792 29.2708 54.4375 37.9375 49.1875 C 46.6042 43.8958 56.4583 41.25 67.5 41.25 C 74.2917 41.25 80.625 42.2292 86.5 44.1875 C 92.4167 46.1042 97.7292 48.9375 102.438 52.6875 C 107.146 56.3958 111.042 60.9375 114.125 66.3125 C 117.208 71.6458 119.292 77.75 120.375 84.625 Z M 254.672 107 C 254.672 120.667 252.172 132.417 247.172 142.25 C 242.172 152.042 235.318 159.583 226.609 164.875 C 217.943 170.125 208.089 172.75 197.047 172.75 C 185.964 172.75 176.068 170.125 167.359 164.875 C 158.693 159.583 151.859 152.021 146.859 142.187 C 141.859 132.354 139.359 120.625 139.359 107 C 139.359 93.3333 141.859 81.6042 146.859 71.8125 C 151.859 61.9792 158.693 54.4375 167.359 49.1875 C 176.068 43.8958 185.964 41.25 197.047 41.25 C 208.089 41.25 217.943 43.8958 226.609 49.1875 C 235.318 54.4375 242.172 61.9792 247.172 71.8125 C 252.172 81.6042 254.672 93.3333 254.672 107 Z M 235.547 107 C 235.547 96.5833 233.859 87.8125 230.484 80.6875 C 227.151 73.5208 222.568 68.1042 216.734 64.4375 C 210.943 60.7292 204.38 58.875 197.047 58.875 C 189.672 58.875 183.089 60.7292 177.297 64.4375 C 171.505 68.1042 166.922 73.5208 163.547 80.6875 C 160.214 87.8125 158.547 96.5833 158.547 107 C 158.547 117.417 160.214 126.208 163.547 133.375 C 166.922 140.5 171.505 145.917 177.297 149.625 C 183.089 153.292 189.672 155.125 197.047 155.125 C 204.38 155.125 210.943 153.292 216.734 149.625 C 222.568 145.917 227.151 140.5 230.484 133.375 C 233.859 126.208 235.547 117.417 235.547 107 Z M 382.063 43 V 171 H 364.312 L 299.25 77.125 H 298.063 V 171 H 278.75 V 43 H 296.625 L 361.75 137 H 362.937 V 43 H 382.063 Z M 421.047 171 H 400.547 L 446.609 43 H 468.922 L 514.984 171 H 494.484 L 458.297 66.25 H 457.297 L 421.047 171 Z M 439.05 119 H 476.5 V 119 L 482.4 136 L 433.15 136 V 136 Z M 533.469 171 V 43 H 579.094 C 589.01 43 597.24 44.7083 603.781 48.125 C 610.365 51.5417 615.281 56.2708 618.531 62.3125 C 621.781 68.3125 623.406 75.25 623.406 83.125 C 623.406 90.9583 621.76 97.8542 618.469 103.813 C 615.219 109.729 610.302 114.333 603.719 117.625 C 597.177 120.917 588.948 122.563 579.031 122.563 H 552.8 V 105.937 H 577.281 C 583.531 105.937 588.615 105.042 592.531 103.25 C 596.49 101.458 599.385 98.8542 601.219 95.4375 C 603.052 92.0208 603.969 87.9167 603.969 83.125 C 603.969 78.2917 603.031 74.1042 601.156 70.5625 C 599.323 67.0208 596.427 64.3125 592.469 62.4375 C 588.552 60.5208 583.406 59.5625 577.031 59.5625 H 552.781 V 171 H 533.469 Z M 601 118.85 L 628.281 171 H 606.281 L 579 122.56 H 579 C 588.9 122.55 597.18 120.7 601 118.85 Z" />
            </g>
          </mask>

          <linearGradient
            id="conar-gradient"
            x1="316.842"
            y1="4.18174e-06"
            x2="316.842"
            y2="171"
            gradientUnits="userSpaceOnUse"
          >
            <stop stopColor="#070708" />
            <stop offset="1" stopColor="#0F0F0F" />
          </linearGradient>
          <linearGradient id="circle-rgb-gradient" x1="0" y1="0" x2="1" y2="1">
            <stop offset="0.125" stopColor="#FF0000" />
            <stop offset="0.26" stopColor="#FFA500" />
            <stop offset="0.39" stopColor="#FFFF00" />
            <stop offset="0.52" stopColor="#008000" />
            <stop offset="0.65" stopColor="#0000FF" />
            <stop offset="0.78" stopColor="#4B0082" />
            <stop offset="0.91" stopColor="#EE82EE" />
            <stop offset="1" stopColor="#FF0000" />
          </linearGradient>
        </defs>
      </svg>
    </div>

  )
}

export default AnimatedConarText
